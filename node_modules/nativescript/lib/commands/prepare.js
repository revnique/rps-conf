"use strict";
class PrepareCommand {
    constructor($errors, $platformService, $platformCommandParameter) {
        this.$errors = $errors;
        this.$platformService = $platformService;
        this.$platformCommandParameter = $platformCommandParameter;
        this.allowedParameters = [this.$platformCommandParameter];
    }
    execute(args) {
        return (() => {
            this.$platformService.preparePlatform(args[0]).wait();
        }).future()();
    }
    canExecute(args) {
        return (() => {
            return this.$platformCommandParameter.validate(args[0]).wait() && this.$platformService.validateOptions(args[0]).wait();
        }).future()();
    }
}
exports.PrepareCommand = PrepareCommand;
$injector.registerCommand("prepare", PrepareCommand);
