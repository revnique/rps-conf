"use strict";
class AddPluginCommand {
    constructor($pluginsService, $errors) {
        this.$pluginsService = $pluginsService;
        this.$errors = $errors;
        this.allowedParameters = [];
    }
    execute(args) {
        return this.$pluginsService.add(args[0]);
    }
    canExecute(args) {
        return (() => {
            if (!args[0]) {
                this.$errors.fail("You must specify plugin name.");
            }
            let installedPlugins = this.$pluginsService.getAllInstalledPlugins().wait();
            let pluginName = args[0].toLowerCase();
            if (_.some(installedPlugins, (plugin) => plugin.name.toLowerCase() === pluginName)) {
                this.$errors.failWithoutHelp(`Plugin "${pluginName}" is already installed.`);
            }
            return true;
        }).future()();
    }
}
exports.AddPluginCommand = AddPluginCommand;
$injector.registerCommand(["plugin|add", "plugin|install"], AddPluginCommand);
