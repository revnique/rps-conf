"use strict";
const helpers_1 = require("../common/helpers");
const command_params_1 = require("../common/command-params");
class ListiOSApps {
    constructor($injector, $itmsTransporterService, $logger, $prompter, $stringParameterBuilder) {
        this.$injector = $injector;
        this.$itmsTransporterService = $itmsTransporterService;
        this.$logger = $logger;
        this.$prompter = $prompter;
        this.$stringParameterBuilder = $stringParameterBuilder;
        this.allowedParameters = [new command_params_1.StringCommandParameter(this.$injector), new command_params_1.StringCommandParameter(this.$injector)];
    }
    execute(args) {
        return (() => {
            let username = args[0], password = args[1];
            if (!username) {
                username = this.$prompter.getString("Apple ID", { allowEmpty: false }).wait();
            }
            if (!password) {
                password = this.$prompter.getPassword("Apple ID password").wait();
            }
            let iOSApplications = this.$itmsTransporterService.getiOSApplications({ username, password }).wait();
            if (!iOSApplications || !iOSApplications.length) {
                this.$logger.out("Seems you don't have any applications yet.");
            }
            else {
                let table = helpers_1.createTable(["Application Name", "Bundle Identifier", "Version"], iOSApplications.map(element => {
                    return [element.name, element.bundleId, element.version];
                }));
                this.$logger.out(table.toString());
            }
        }).future()();
    }
}
exports.ListiOSApps = ListiOSApps;
$injector.registerCommand("appstore|*list", ListiOSApps);
