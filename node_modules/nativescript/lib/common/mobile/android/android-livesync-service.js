"use strict";
class LiveSyncCommands {
    static DeployProjectCommand(liveSyncUrl) {
        return `DeployProject ${liveSyncUrl} \r`;
    }
    static ReloadStartViewCommand() {
        return "ReloadStartView \r";
    }
    static SyncFilesCommand() {
        return "SyncFiles \r";
    }
    static RefreshCurrentViewCommand() {
        return "RefreshCurrentView \r";
    }
    static DeleteFile(relativePath) {
        return `DeleteFile "${relativePath}" \r`;
    }
}
class AndroidLiveSyncService {
    constructor(device, $fs, $mobileHelper) {
        this.device = device;
        this.$fs = $fs;
        this.$mobileHelper = $mobileHelper;
    }
    get liveSyncCommands() {
        return LiveSyncCommands;
    }
    livesync(appIdentifier, liveSyncRoot, commands) {
        return (() => {
            let commandsFileDevicePath = this.$mobileHelper.buildDevicePath(liveSyncRoot, AndroidLiveSyncService.COMMANDS_FILE);
            this.createCommandsFileOnDevice(commandsFileDevicePath, commands).wait();
            this.device.adb.sendBroadcastToDevice(AndroidLiveSyncService.LIVESYNC_BROADCAST_NAME, { "app-id": appIdentifier }).wait();
        }).future()();
    }
    createCommandsFileOnDevice(commandsFileDevicePath, commands) {
        return this.device.fileSystem.createFileOnDevice(commandsFileDevicePath, commands.join("\n"));
    }
}
AndroidLiveSyncService.COMMANDS_FILE = "telerik.livesync.commands";
AndroidLiveSyncService.LIVESYNC_BROADCAST_NAME = "com.telerik.LiveSync";
exports.AndroidLiveSyncService = AndroidLiveSyncService;
