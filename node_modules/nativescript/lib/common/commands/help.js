"use strict";
const os_1 = require("os");
const Future = require("fibers/future");
class HelpCommand {
    constructor($logger, $injector, $htmlHelpService, $staticConfig, $options) {
        this.$logger = $logger;
        this.$injector = $injector;
        this.$htmlHelpService = $htmlHelpService;
        this.$staticConfig = $staticConfig;
        this.$options = $options;
        this.enableHooks = false;
        this.allowedParameters = [];
    }
    canExecute(args) {
        return Future.fromResult(true);
    }
    execute(args) {
        return (() => {
            let topic = (args[0] || "").toLowerCase();
            let hierarchicalCommand = this.$injector.buildHierarchicalCommand(args[0], _.tail(args));
            if (hierarchicalCommand) {
                topic = hierarchicalCommand.commandName;
            }
            if (this.$options.help) {
                let help = this.$htmlHelpService.getCommandLineHelpForCommand(topic);
                if (this.$staticConfig.FULL_CLIENT_NAME) {
                    this.$logger.info(this.$staticConfig.FULL_CLIENT_NAME.green.bold + os_1.EOL);
                }
                this.$logger.printMarkdown(help);
            }
            else {
                this.$htmlHelpService.openHelpForCommandInBrowser(topic).wait();
            }
        }).future()();
    }
}
exports.HelpCommand = HelpCommand;
$injector.registerCommand(["help", "/?"], HelpCommand);
