"use strict";
class ProgressIndicator {
    constructor($logger) {
        this.$logger = $logger;
    }
    showProgressIndicator(future, timeout, options) {
        return (() => {
            let surpressTrailingNewLine = options && options.surpressTrailingNewLine;
            try {
                while (!future.isResolved()) {
                    this.$logger.printMsgWithTimeout(".", timeout).wait();
                }
                future.wait();
            }
            catch (err) {
                this.$logger.out();
                throw err;
            }
            if (!surpressTrailingNewLine) {
                this.$logger.out();
            }
        }).future()();
    }
}
exports.ProgressIndicator = ProgressIndicator;
$injector.register("progressIndicator", ProgressIndicator);
