"use strict";
class CleanAppCommandBase {
    constructor($options, $platformService) {
        this.$options = $options;
        this.$platformService = $platformService;
    }
    execute(args) {
        let platform = args[0].toLowerCase();
        return this.$platformService.cleanDestinationApp(platform);
    }
}
exports.CleanAppCommandBase = CleanAppCommandBase;
class CleanAppIosCommand extends CleanAppCommandBase {
    constructor($options, $platformsData, $platformService) {
        super($options, $platformService);
        this.$options = $options;
        this.$platformsData = $platformsData;
        this.allowedParameters = [];
    }
    execute(args) {
        return super.execute([this.$platformsData.availablePlatforms.iOS]);
    }
}
exports.CleanAppIosCommand = CleanAppIosCommand;
$injector.registerCommand("clean-app|ios", CleanAppIosCommand);
class CleanAppAndroidCommand extends CleanAppCommandBase {
    constructor($options, $platformsData, $errors, $platformService) {
        super($options, $platformService);
        this.$options = $options;
        this.$platformsData = $platformsData;
        this.$errors = $errors;
        this.allowedParameters = [];
    }
    execute(args) {
        return super.execute([this.$platformsData.availablePlatforms.Android]);
    }
}
exports.CleanAppAndroidCommand = CleanAppAndroidCommand;
$injector.registerCommand("clean-app|android", CleanAppAndroidCommand);
