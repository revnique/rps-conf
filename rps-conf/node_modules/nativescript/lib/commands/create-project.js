"use strict";
const constants = require("../constants");
class CreateProjectCommand {
    constructor($projectService, $errors, $options, $stringParameterBuilder) {
        this.$projectService = $projectService;
        this.$errors = $errors;
        this.$options = $options;
        this.$stringParameterBuilder = $stringParameterBuilder;
        this.enableHooks = false;
        this.allowedParameters = [this.$stringParameterBuilder.createMandatoryParameter("Project name cannot be empty.")];
    }
    execute(args) {
        return (() => {
            if ((this.$options.tsc || this.$options.ng) && this.$options.template) {
                this.$errors.fail("You cannot use --ng or --tsc options together with --template.");
            }
            let selectedTemplate;
            if (this.$options.tsc) {
                selectedTemplate = constants.TYPESCRIPT_NAME;
            }
            else if (this.$options.ng) {
                selectedTemplate = constants.ANGULAR_NAME;
            }
            else {
                selectedTemplate = this.$options.template;
            }
            this.$projectService.createProject(args[0], selectedTemplate).wait();
        }).future()();
    }
}
exports.CreateProjectCommand = CreateProjectCommand;
$injector.registerCommand("create", CreateProjectCommand);
