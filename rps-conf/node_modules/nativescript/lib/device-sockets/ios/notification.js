"use strict";
class IOSNotification {
    constructor($projectData) {
        this.$projectData = $projectData;
    }
    get waitForDebug() {
        return this.formatNotification(IOSNotification.WAIT_FOR_DEBUG_NOTIFICATION_NAME);
    }
    get attachRequest() {
        return this.formatNotification(IOSNotification.ATTACH_REQUEST_NOTIFICATION_NAME);
    }
    get appLaunching() {
        return this.formatNotification(IOSNotification.APP_LAUNCHING_NOTIFICATION_NAME);
    }
    get readyForAttach() {
        return this.formatNotification(IOSNotification.READY_FOR_ATTACH_NOTIFICATION_NAME);
    }
    get attachAvailabilityQuery() {
        return this.formatNotification(IOSNotification.ATTACH_AVAILABILITY_QUERY_NOTIFICATION_NAME);
    }
    get alreadyConnected() {
        return this.formatNotification(IOSNotification.ALREADY_CONNECTED_NOTIFICATION_NAME);
    }
    get attachAvailable() {
        return this.formatNotification(IOSNotification.ATTACH_AVAILABLE_NOTIFICATION_NAME);
    }
    formatNotification(notification) {
        return `${this.$projectData.projectId}:NativeScript.Debug.${notification}`;
    }
}
IOSNotification.WAIT_FOR_DEBUG_NOTIFICATION_NAME = "WaitForDebugger";
IOSNotification.ATTACH_REQUEST_NOTIFICATION_NAME = "AttachRequest";
IOSNotification.APP_LAUNCHING_NOTIFICATION_NAME = "AppLaunching";
IOSNotification.READY_FOR_ATTACH_NOTIFICATION_NAME = "ReadyForAttach";
IOSNotification.ATTACH_AVAILABILITY_QUERY_NOTIFICATION_NAME = "AttachAvailabilityQuery";
IOSNotification.ALREADY_CONNECTED_NOTIFICATION_NAME = "AlreadyConnected";
IOSNotification.ATTACH_AVAILABLE_NOTIFICATION_NAME = "AttachAvailable";
exports.IOSNotification = IOSNotification;
$injector.register("iOSNotification", IOSNotification);
