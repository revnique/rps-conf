"use strict";
const os_1 = require("os");
const future = require("fibers/future");
class DoctorCommand {
    constructor($doctorService, $logger, $staticConfig) {
        this.$doctorService = $doctorService;
        this.$logger = $logger;
        this.$staticConfig = $staticConfig;
        this.allowedParameters = [];
    }
    canExecute(args) {
        return future.fromResult(true);
    }
    execute(args) {
        return (() => {
            let warningsPrinted = this.$doctorService.printWarnings().wait();
            if (warningsPrinted) {
                let client = this.$staticConfig.CLIENT_NAME_ALIAS || this.$staticConfig.CLIENT_NAME;
                this.$logger.out(`When you file an issue, these warnings will help the ${client} team to investigate, identify, and resolve the report.`.bold
                    + os_1.EOL + `Please, ignore them if you are not experiencing any issues with ${client}.`.bold + os_1.EOL);
            }
            else {
                this.$logger.out("No issues were detected.".bold);
            }
        }).future()();
    }
}
exports.DoctorCommand = DoctorCommand;
$injector.registerCommand("doctor", DoctorCommand);
