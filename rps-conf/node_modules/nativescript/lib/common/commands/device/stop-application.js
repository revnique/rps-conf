"use strict";
class StopApplicationOnDeviceCommand {
    constructor($devicesService, $errors, $stringParameter, $staticConfig, $options) {
        this.$devicesService = $devicesService;
        this.$errors = $errors;
        this.$stringParameter = $stringParameter;
        this.$staticConfig = $staticConfig;
        this.$options = $options;
        this.allowedParameters = [this.$stringParameter, this.$stringParameter];
    }
    execute(args) {
        return (() => {
            this.$devicesService.initialize({ deviceId: this.$options.device, skipInferPlatform: true, platform: args[1] }).wait();
            let action = (device) => device.applicationManager.stopApplication(args[0]);
            this.$devicesService.execute(action).wait();
        }).future()();
    }
}
exports.StopApplicationOnDeviceCommand = StopApplicationOnDeviceCommand;
$injector.registerCommand("device|stop", StopApplicationOnDeviceCommand);
