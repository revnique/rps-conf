"use strict";
class RunApplicationOnDeviceCommand {
    constructor($devicesService, $errors, $stringParameter, $staticConfig, $options, $devicePlatformsConstants) {
        this.$devicesService = $devicesService;
        this.$errors = $errors;
        this.$stringParameter = $stringParameter;
        this.$staticConfig = $staticConfig;
        this.$options = $options;
        this.$devicePlatformsConstants = $devicePlatformsConstants;
        this.allowedParameters = [this.$stringParameter];
    }
    execute(args) {
        return (() => {
            this.$devicesService.initialize({ deviceId: this.$options.device, skipInferPlatform: true }).wait();
            if (this.$devicesService.deviceCount > 1) {
                this.$errors.failWithoutHelp("More than one device found. Specify device explicitly with --device option. To discover device ID, use $%s device command.", this.$staticConfig.CLIENT_NAME.toLowerCase());
            }
            this.$devicesService.execute((device) => device.applicationManager.startApplication(args[0])).wait();
        }).future()();
    }
}
exports.RunApplicationOnDeviceCommand = RunApplicationOnDeviceCommand;
$injector.registerCommand("device|run", RunApplicationOnDeviceCommand);
