"use strict";
const helpers_1 = require("../common/helpers");
class AnalyticsSettingsService {
    constructor($userSettingsService, $staticConfig, $logger) {
        this.$userSettingsService = $userSettingsService;
        this.$staticConfig = $staticConfig;
        this.$logger = $logger;
    }
    canDoRequest() {
        return (() => { return true; }).future()();
    }
    getUserId() {
        return (() => {
            let currentUserId = this.$userSettingsService.getSettingValue("USER_ID").wait();
            if (!currentUserId) {
                currentUserId = helpers_1.createGUID(false);
                this.$logger.trace(`Setting new USER_ID: ${currentUserId}.`);
                this.$userSettingsService.saveSetting("USER_ID", currentUserId).wait();
            }
            return currentUserId;
        }).future()();
    }
    getClientName() {
        return "" + this.$staticConfig.CLIENT_NAME_ALIAS.cyan.bold;
    }
    getPrivacyPolicyLink() {
        return "http://www.telerik.com/company/privacy-policy";
    }
    getUserSessionsCount(projectName) {
        return (() => {
            let oldSessionCount = this.$userSettingsService.getSettingValue(AnalyticsSettingsService.SESSIONS_STARTED_OBSOLETE_KEY).wait();
            if (oldSessionCount) {
                this.$userSettingsService.removeSetting(AnalyticsSettingsService.SESSIONS_STARTED_OBSOLETE_KEY).wait();
            }
            return this.$userSettingsService.getSettingValue(this.getSessionsProjectKey(projectName)).wait() || oldSessionCount || 0;
        }).future()();
    }
    setUserSessionsCount(count, projectName) {
        return this.$userSettingsService.saveSetting(this.getSessionsProjectKey(projectName), count);
    }
    getSessionsProjectKey(projectName) {
        return `${AnalyticsSettingsService.SESSIONS_STARTED_KEY_PREFIX}${projectName}`;
    }
}
AnalyticsSettingsService.SESSIONS_STARTED_OBSOLETE_KEY = "SESSIONS_STARTED";
AnalyticsSettingsService.SESSIONS_STARTED_KEY_PREFIX = "SESSIONS_STARTED_";
$injector.register("analyticsSettingsService", AnalyticsSettingsService);
